
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en">

<head>
<title>D-Type Manual</title>
<link rel="stylesheet" type="text/css" href="../../common/include/style_001.css" />
</head>

<body>
<a href="../../common/manual/index.htm"><img src="../../common/images/index.gif" border="0" alt="Index" /></a><br />

<h1>C/C++ Functions</h1>

<h2>dtTypesetterGetCachePolicy</h2><div class="box_prototype"><strong>
DT_SWORD dtTypesetterGetCachePolicy(DT_DTENGINE engine, DT_SLONG* max_bitmap_bytes, DT_SWORD* reserved1, DT_SWORD* reserved2, DT_SWORD* reserved3, DT_SWORD* reserved4)</strong></div><br /><strong>Short Description:</strong> <em>Get Typesetter's bitmap cache policy</em><br /><br />

<p>This function returns the current bitmap cache policy from the Typesetter of the specified Standard Engine instance. This policy is normally set by <a href="dtTypesetterSetCachePolicy.htm">dtTypesetterSetCachePolicy</a>.</p>


<h3>Parameters</h3>

<table class="table_data" summary="Description of function parameters">
<tr><th>Parameter</th><th>Description</th></tr>

<tr><td>
<p><em>engine</em></p>
</td><td>
<p>Handle of the previously created Standard Engine instance.</p>
</td></tr>

<tr><td>
<p><em>max_bitmap_bytes</em></p>
</td><td>
<p>A valid pointer to a variable that will receive the Typesetter's current maximum bitmap size, in bytes, of a 8-bpp glyph image that can be stored in the bitmap cache. See <a href="dtTypesetterSetCachePolicy.htm">dtTypesetterSetCachePolicy</a> for details.</p>
<p>However, if you do not wish to receive the value of the above parameter, you may set this pointer to DV_NULL.</p>
</td></tr>

<tr><td>
<p><em>reserved1</em></p>
</td><td>
<p>Reserved for future use. Must be a valid pointer to a variable of the <a href="../manual/types.htm#DT_SWORD">DT_SWORD</a> type.</p>
<p>However, if you do not wish to receive the value of the above parameter, you may set this pointer to DV_NULL.</p>
</td></tr>

<tr><td>
<p><em>reserved2</em></p>
</td><td>
<p>Reserved for future use. Must be a valid pointer to a variable of the <a href="../manual/types.htm#DT_SWORD">DT_SWORD</a> type.</p>
<p>However, if you do not wish to receive the value of the above parameter, you may set this pointer to DV_NULL.</p>
</td></tr>

<tr><td>
<p><em>reserved3</em></p>
</td><td>
<p>Reserved for future use. Must be a valid pointer to a variable of the <a href="../manual/types.htm#DT_SWORD">DT_SWORD</a> type.</p>
<p>However, if you do not wish to receive the value of the above parameter, you may set this pointer to DV_NULL.</p>
</td></tr>

<tr><td>
<p><em>reserved4</em></p>
</td><td>
<p>Reserved for future use. Must be a valid pointer to a variable of the <a href="../manual/types.htm#DT_SWORD">DT_SWORD</a> type.</p>
<p>However, if you do not wish to receive the value of the above parameter, you may set this pointer to DV_NULL.</p>
</td></tr>

</table>


<h3>Return Value</h3>

<p>If successful, the return value is 1. Otherwise, the function returns 0.</p>



&nbsp;
<br />
<br />
<a href="../../common/manual/index.htm"><img src="../../common/images/index.gif" border="0" alt="Index" /></a><br />&nbsp;
</body>
</html>
