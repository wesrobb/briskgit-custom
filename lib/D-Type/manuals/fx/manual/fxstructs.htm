
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en">

<head>
<title>D-Type Manual</title>
<link rel="stylesheet" type="text/css" href="../../common/include/style_001.css" />
</head>

<body>
<a href="../../common/manual/index.htm"><img src="../../common/images/index.gif" border="0" alt="Index" /></a><br />

<h1>D-Type External Format Plugin Structures</h1>

<p>At present, D-Type External Format Plugin defines and utilizes the following structure types:</p>

<h2><strong id="DT_AUX_INFO">DT_AUX_INFO</strong></h2>
<p>This structure type provides additional initialization information to D-Type External Format Plugin and holds additional initialization information used by D-Type External Format Plugin. The structure is defined as follows:</p>
<div class="box_field">
<pre>
<span class="codecomment">/* Initialization information */</span>&nbsp;
typedef struct
{
    DT_SLONG InitKey;    <span class="codecomment">/* Initialization key (0=demo) */</span>&nbsp;
    DT_SWORD InitFlag;   <span class="codecomment">/* Initialization flag (0=demo) */</span>&nbsp;
    DT_SWORD Reserved1;  <span class="codecomment">/* Must be set to 0 */</span>&nbsp;
    DT_SWORD Reserved2;  <span class="codecomment">/* Must be set to 0 */</span>&nbsp;
    DT_UWORD FileFormat; <span class="codecomment">/* File format value (DV_AUX_FILEFORMAT_...) */</span>&nbsp;
    void* Internal;      <span class="codecomment">/* Internal use - must be set to DV_NULL */</span>&nbsp;

} DT_AUX_INFO;
</pre>
</div>
<p>Presently <em>FileFormat</em> can be one of the following:</p>

<ul>
<li>1 (DV_AUX_FILEFORMAT_JPG) &mdash; JPEG format.</li>
<li>2 (DV_AUX_FILEFORMAT_PNG or DV_AUX_FILEFORMAT_APNG) &mdash; PNG or APNG format.</li>
<li>100 (DV_AUX_FILEFORMAT_GIF) &mdash; GIF format.</li>
<li>200 (DV_AUX_FILEFORMAT_ZLIB) &mdash; ZLIB format.</li>
</ul>

<h2><strong id="DT_AUX_GRAPHICS_ATTRIBS">DT_AUX_GRAPHICS_ATTRIBS</strong></h2>
<p>This structure type holds attributes for raster graphics and is utilized by D-Type External Format Plugin's image input/output and animation functions. The structure is defined as follows:</p>
<div class="box_field">
<pre>
<span class="codecomment">/* Attributes for raster graphics - (e.g. color gradient for grayscale images, compression quality, transparency treatment etc.) */</span>&nbsp;
typedef struct
{
    DT_UBYTE R1, G1, B1;       <span class="codecomment">/* RGB color of the background */</span>&nbsp;
    DT_UBYTE R2, G2, B2;       <span class="codecomment">/* RGB color of the foreground */</span>&nbsp;
    DT_UBYTE PaletteFlag;      <span class="codecomment">/* Set to 0 for RGB, 1 for palette (PNG 8-bpp mode only) */</span>&nbsp;
    DT_UBYTE TransparencyFlag; <span class="codecomment">/* 0=no transparent background, 1=basic transparency, 2=reserved, 3=alpha transparency */</span>&nbsp;
    DT_UBYTE AlphaFlag;        <span class="codecomment">/* Set to 1 to respect AlphaValue, otherwise set to 0 */</span>&nbsp;
    DT_UBYTE AlphaValue;       <span class="codecomment">/* Supplies alpha or gray value when AlphaFlag is nonzero */</span>&nbsp;
    DT_SLONG AnimDelay;        <span class="codecomment">/* Animation delay in 1/100 seconds */</span>&nbsp;
    DT_SLONG AnimLoops;        <span class="codecomment">/* Number of animation loops (0=play indefinitely) */</span>&nbsp;
    DT_SWORD Quality;          <span class="codecomment">/* Graphics quality (0-100 for JPEG; for GIF quality over 75 activates dithering) */</span>&nbsp;

} DT_AUX_GRAPHICS_ATTRIBS;
</pre>
</div>

<h2><strong id="DT_AUX_USER_STREAM">DT_AUX_USER_STREAM</strong></h2>
<p>This structure type defines a generic user stream type for reading and writing data. The structure is defined as follows:</p>
<div class="box_field">
<pre>
<span class="codecomment">/* User defined stream */</span>&nbsp;
typedef struct
{
    void* UserStruct;    <span class="codecomment">/* User supplied data (will be passed to UserFuncR and UserFuncW) */</span>&nbsp;
    DT_SLONG (*UserFuncR)(void* user_struct, DT_UBYTE* buffer, DT_SLONG length);       <span class="codecomment">/* user function to read data from stream */</span>&nbsp;
    DT_SLONG (*UserFuncW)(void* user_struct, const DT_UBYTE* buffer, DT_SLONG length); <span class="codecomment">/* user function to write data to stream */</span>&nbsp;
    DT_FILE_PTR FilePtr; <span class="codecomment">/* For use with standard file-pointer streams */</span>&nbsp;

} DT_AUX_USER_STREAM;
</pre>
</div>

<p>If <em>FilePtr</em> is DV_NULL, then D-Type External Format Plugin will use a custom stream which you must implement yourself. In this case <em>UserFuncR</em> must be a valid pointer to your own function that reads data from your stream (and copies it to a supplied buffer), while <em>UserFuncW</em> must be a valid pointer to your own function that writes data to your stream (from a supplied buffer). The <em>UserStruct</em> member is a void pointer to your own data type. This pointer is passed back to your functions during the callback to help you track the state of execution or provide other information useful to your application. This pointer is not accessed or modified by D-Type External Format Plugin in any way; it is simply sent back to your functions as supplied. You can set this parameter to DV_NULL if you have no need for it.</p>

<p>If <em>FilePtr</em> is not DV_NULL, then D-Type External Format Plugin will use a standard C/C++ file-pointer stream. In this case <em>FilePtr</em> must be a valid pointer to a standard C/C++ file stream.</p>



&nbsp;
<br />
<br />
<a href="../../common/manual/index.htm"><img src="../../common/images/index.gif" border="0" alt="Index" /></a><br />&nbsp;
</body>
</html>
