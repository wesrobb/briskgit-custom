
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en">

<head>
<title>D-Type Manual</title>
<link rel="stylesheet" type="text/css" href="../../common/include/style_001.css" />
</head>

<body>
<a href="../../common/manual/index.htm"><img src="../../common/images/index.gif" border="0" alt="Index" /></a><br />

<h1>PowerDoc Objects</h1>

<h2>List Box</h2>
<h3 id="overview">Overview</h3>
The List Box object is a visual and interactive form control that offers users a single option or multiple options from which to choose.<br />
<br />
<strong>Designated Rendering Function:</strong> fcDrawListBox (10004)<br />
<br />
Note: fcValue_08, fcValue_16, fcValue_24 and fcValue_32 cannot be used at the same time. fcValue_32 takes precedence over fcValue_24. fcValue_24 takes precedence over fcValue_16. Finally, fcValue_16 takes precedence over fcValue_08.<br />
<h3 id="links">Links</h3>
<div class="pdoc_obj_descr"><h4 id="fcConfigPtr"><em><span class="field">fcConfigPtr</span> (10000)</em></h4>
<p class="also_appears_in"><small>Also appears in: <a href="301.htm#fcConfigPtr">Button</a>, <a href="302.htm#fcConfigPtr">Radio Button</a>, <a href="303.htm#fcConfigPtr">Check Box</a>, <a href="304.htm#fcConfigPtr">Text Box</a>, <a href="306.htm#fcConfigPtr">Horizontal Slider</a>, <a href="307.htm#fcConfigPtr">Vertical Slider</a>, <a href="308.htm#fcConfigPtr">Rich Text Box</a>, <a href="309.htm#fcConfigPtr">Rich Button</a>, <a href="310.htm#fcConfigPtr">Rich List Box</a></small></p>
<p>
Link to the <a href="201.htm">Control Configuration</a> object.<br />
<br />
This link supplies the control's configuration parameters.<br />
</p>
</div>
<div class="pdoc_obj_descr"><h4 id="fcProgramPtr"><em><span class="field">fcProgramPtr</span> (10030)</em></h4>
<p class="also_appears_in"><small>Also appears in: <a href="301.htm#fcProgramPtr">Button</a>, <a href="302.htm#fcProgramPtr">Radio Button</a>, <a href="303.htm#fcProgramPtr">Check Box</a>, <a href="304.htm#fcProgramPtr">Text Box</a>, <a href="306.htm#fcProgramPtr">Horizontal Slider</a>, <a href="307.htm#fcProgramPtr">Vertical Slider</a>, <a href="308.htm#fcProgramPtr">Rich Text Box</a>, <a href="309.htm#fcProgramPtr">Rich Button</a>, <a href="310.htm#fcProgramPtr">Rich List Box</a></small></p>
<p>
Link to the <a href="019.htm">Program</a> object.<br />
</p>
</div>
<div class="pdoc_obj_descr"><h4 id="fcColumnNextPtr"><em><span class="field">fcColumnNextPtr</span> (10011)</em></h4>
<p>
Link to the <a href="202.htm">Listbox Column</a> object.<br />
<br />
This link in used to establish a link to the next list box column.<br />
</p>
</div>
<h3 id="props">Properties</h3>
<div class="pdoc_obj_descr"><h4 id="fcConnectionID"><em><span class="field">fcConnectionID</span> (10001)</em> &nbsp; <small class="label">PD_LONG_SIGNED</small></h4>
<p class="also_appears_in"><small>Also appears in: <a href="301.htm#fcConnectionID">Button</a>, <a href="302.htm#fcConnectionID">Radio Button</a>, <a href="303.htm#fcConnectionID">Check Box</a>, <a href="304.htm#fcConnectionID">Text Box</a>, <a href="306.htm#fcConnectionID">Horizontal Slider</a>, <a href="307.htm#fcConnectionID">Vertical Slider</a>, <a href="308.htm#fcConnectionID">Rich Text Box</a>, <a href="309.htm#fcConnectionID">Rich Button</a>, <a href="310.htm#fcConnectionID">Rich List Box</a></small></p>
<p>
An ID used to establish a connection between several independent form controls. Controls with the same fcConnectionID are connected.<br />
</p>
</div>
<div class="pdoc_obj_descr"><h4 id="fcLockStatus"><em><span class="field">fcLockStatus</span> (10002)</em> &nbsp; <small class="label">PD_BYTE_UNSIGNED</small></h4>
<p class="also_appears_in"><small>Also appears in: <a href="301.htm#fcLockStatus">Button</a>, <a href="302.htm#fcLockStatus">Radio Button</a>, <a href="303.htm#fcLockStatus">Check Box</a>, <a href="304.htm#fcLockStatus">Text Box</a>, <a href="306.htm#fcLockStatus">Horizontal Slider</a>, <a href="307.htm#fcLockStatus">Vertical Slider</a>, <a href="308.htm#fcLockStatus">Rich Text Box</a>, <a href="309.htm#fcLockStatus">Rich Button</a>, <a href="310.htm#fcLockStatus">Rich List Box</a></small></p>
<p>
A flag that indicates whether and how the control is locked for user interactions.<br />
<br />
<strong>Supported values:</strong><br />
<br />
0 = Control is not locked (all user interactions are enabled)<br />
<br />
1 = Control is completely locked (all user interactions are disabled)<br />
<br />
2 = Control is locked for changes (user changes are disabled, other interactions are enabled)<br />
<br />
3 = Control is locked for changes (user changes are disabled, other interactions are enabled), except scrolling<br />
<br />
4 = Control is only locked for scrolling<br />
</p>
</div>
<div class="pdoc_obj_descr"><h4 id="fcState"><em><span class="field">fcState</span> (10003)</em> &nbsp; <small class="label">PD_BYTE_UNSIGNED</small></h4>
<p class="also_appears_in"><small>Also appears in: <a href="301.htm#fcState">Button</a>, <a href="302.htm#fcState">Radio Button</a>, <a href="303.htm#fcState">Check Box</a>, <a href="304.htm#fcState">Text Box</a>, <a href="306.htm#fcState">Horizontal Slider</a>, <a href="307.htm#fcState">Vertical Slider</a>, <a href="308.htm#fcState">Rich Text Box</a>, <a href="309.htm#fcState">Rich Button</a>, <a href="310.htm#fcState">Rich List Box</a></small></p>
<p>
A flag indicating the state of a control.<br />
<br />
<strong>Supported values:</strong><br />
<br />
0 = Normal<br />
1 = Pushed<br />
2 = Selected<br />
</p>
</div>
<div class="pdoc_obj_descr"><h4 id="fcName"><em><span class="field">fcName</span> (10004)</em> &nbsp; <small class="label">PD_ASC</small></h4>
<p class="also_appears_in"><small>Also appears in: <a href="301.htm#fcName">Button</a>, <a href="302.htm#fcName">Radio Button</a>, <a href="303.htm#fcName">Check Box</a>, <a href="304.htm#fcName">Text Box</a>, <a href="306.htm#fcName">Horizontal Slider</a>, <a href="307.htm#fcName">Vertical Slider</a>, <a href="308.htm#fcName">Rich Text Box</a>, <a href="309.htm#fcName">Rich Button</a>, <a href="310.htm#fcName">Rich List Box</a></small></p>
<p>
Name of the control. Controls representing different variables or features should have different names. Controls representing the same variable or feature (e.g. a group of radio buttons) should have the same name.<br />
</p>
</div>
<div class="pdoc_obj_descr"><h4 id="fcValue_08"><em><span class="field">fcValue_08</span> (10005)</em> &nbsp; <small class="label">PD_ASC</small></h4>
<p><small><strong>Supported Compression Methods: <a href="intro.htm#method_006">006</a></strong></small></p>
<p class="also_appears_in"><small>Also appears in: <a href="202.htm#fcValue_08">Listbox Column</a>, <a href="301.htm#fcValue_08">Button</a>, <a href="302.htm#fcValue_08">Radio Button</a>, <a href="303.htm#fcValue_08">Check Box</a>, <a href="304.htm#fcValue_08">Text Box</a></small></p>
<p>
Control's value in ANSI format (1 byte per character). Any form control can have a value. Most controls (e.g. buttons, radio buttons, check boxes, text boxes) need a value to function in a useful way. Some controls, however, can function without a value (e.g. sliders).<br />
</p>
</div>
<div class="pdoc_obj_descr"><h4 id="fcValue_16"><em><span class="field">fcValue_16</span> (10012)</em> &nbsp; <small class="label">PD_HEX</small></h4>
<p><small><strong>Supported Compression Methods: <a href="intro.htm#method_004">004</a></strong></small></p>
<p class="also_appears_in"><small>Also appears in: <a href="202.htm#fcValue_16">Listbox Column</a>, <a href="301.htm#fcValue_16">Button</a>, <a href="302.htm#fcValue_16">Radio Button</a>, <a href="303.htm#fcValue_16">Check Box</a>, <a href="304.htm#fcValue_16">Text Box</a></small></p>
<p>
Control's value in Unicode format (2 bytes per character). Any form control can have a value. Most controls (e.g. buttons, radio buttons, check boxes, text boxes) need a value to function in a useful way. Some controls, however, can function without a value (e.g. sliders).<br />
</p>
</div>
<div class="pdoc_obj_descr"><h4 id="fcValue_24"><em><span class="field">fcValue_24</span> (10013)</em> &nbsp; <small class="label">PD_HEX</small></h4>
<p><small><strong>Supported Compression Methods: <a href="intro.htm#method_002">002</a></strong></small></p>
<p class="also_appears_in"><small>Also appears in: <a href="202.htm#fcValue_24">Listbox Column</a>, <a href="301.htm#fcValue_24">Button</a>, <a href="302.htm#fcValue_24">Radio Button</a>, <a href="303.htm#fcValue_24">Check Box</a>, <a href="304.htm#fcValue_24">Text Box</a></small></p>
<p>
Control's value in Unicode format (3 bytes per character). Any form control can have a value. Most controls (e.g. buttons, radio buttons, check boxes, text boxes) need a value to function in a useful way. Some controls, however, can function without a value (e.g. sliders).<br />
</p>
</div>
<div class="pdoc_obj_descr"><h4 id="fcValue_32"><em><span class="field">fcValue_32</span> (10014)</em> &nbsp; <small class="label">PD_HEX</small></h4>
<p><small><strong>Supported Compression Methods: <a href="intro.htm#method_000">000</a></strong></small></p>
<p class="also_appears_in"><small>Also appears in: <a href="202.htm#fcValue_32">Listbox Column</a>, <a href="301.htm#fcValue_32">Button</a>, <a href="302.htm#fcValue_32">Radio Button</a>, <a href="303.htm#fcValue_32">Check Box</a>, <a href="304.htm#fcValue_32">Text Box</a></small></p>
<p>
Control's value in Unicode format (4 bytes per character). Any form control can have a value. Most controls (e.g. buttons, radio buttons, check boxes, text boxes) need a value to function in a useful way. Some controls, however, can function without a value (e.g. sliders).<br />
</p>
</div>
<div class="pdoc_obj_descr"><h4 id="fcDw"><em><span class="field">fcDw</span> (10006)</em> &nbsp; <small class="label">PD_LONG_SIGNED</small></h4>
<p class="also_appears_in"><small>Also appears in: <a href="301.htm#fcDw">Button</a>, <a href="302.htm#fcDw">Radio Button</a>, <a href="303.htm#fcDw">Check Box</a>, <a href="304.htm#fcDw">Text Box</a>, <a href="306.htm#fcDw">Horizontal Slider</a>, <a href="307.htm#fcDw">Vertical Slider</a>, <a href="308.htm#fcDw">Rich Text Box</a>, <a href="309.htm#fcDw">Rich Button</a>, <a href="310.htm#fcDw">Rich List Box</a></small></p>
<p>
Width of the control in document units.<br />
</p>
</div>
<div class="pdoc_obj_descr"><h4 id="fcDh"><em><span class="field">fcDh</span> (10007)</em> &nbsp; <small class="label">PD_LONG_SIGNED</small></h4>
<p class="also_appears_in"><small>Also appears in: <a href="301.htm#fcDh">Button</a>, <a href="302.htm#fcDh">Radio Button</a>, <a href="303.htm#fcDh">Check Box</a>, <a href="304.htm#fcDh">Text Box</a>, <a href="306.htm#fcDh">Horizontal Slider</a>, <a href="307.htm#fcDh">Vertical Slider</a>, <a href="308.htm#fcDh">Rich Text Box</a>, <a href="309.htm#fcDh">Rich Button</a>, <a href="310.htm#fcDh">Rich List Box</a></small></p>
<p>
Height of the control in document units.<br />
</p>
</div>
<div class="pdoc_obj_descr"><h4 id="fcUserParam"><em><span class="field">fcUserParam</span> (10008)</em> &nbsp; <small class="label">PD_LONG_SIGNED</small></h4>
<p class="also_appears_in"><small>Also appears in: <a href="301.htm#fcUserParam">Button</a>, <a href="302.htm#fcUserParam">Radio Button</a>, <a href="303.htm#fcUserParam">Check Box</a>, <a href="304.htm#fcUserParam">Text Box</a>, <a href="306.htm#fcUserParam">Horizontal Slider</a>, <a href="307.htm#fcUserParam">Vertical Slider</a>, <a href="308.htm#fcUserParam">Rich Text Box</a>, <a href="309.htm#fcUserParam">Rich Button</a>, <a href="310.htm#fcUserParam">Rich List Box</a></small></p>
<p>
An arbitrary user parameter.<br />
</p>
</div>
<div class="pdoc_obj_descr"><h4 id="fcTabOrderID"><em><span class="field">fcTabOrderID</span> (10009)</em> &nbsp; <small class="label">PD_WORD_SIGNED</small></h4>
<p class="also_appears_in"><small>Also appears in: <a href="301.htm#fcTabOrderID">Button</a>, <a href="302.htm#fcTabOrderID">Radio Button</a>, <a href="303.htm#fcTabOrderID">Check Box</a>, <a href="304.htm#fcTabOrderID">Text Box</a>, <a href="306.htm#fcTabOrderID">Horizontal Slider</a>, <a href="307.htm#fcTabOrderID">Vertical Slider</a>, <a href="308.htm#fcTabOrderID">Rich Text Box</a>, <a href="309.htm#fcTabOrderID">Rich Button</a>, <a href="310.htm#fcTabOrderID">Rich List Box</a></small></p>
<p>
Tab order ID.<br />
</p>
</div>
<div class="pdoc_obj_descr"><h4 id="fcGroupID"><em><span class="field">fcGroupID</span> (10010)</em> &nbsp; <small class="label">PD_LONG_SIGNED</small></h4>
<p class="also_appears_in"><small>Also appears in: <a href="301.htm#fcGroupID">Button</a>, <a href="302.htm#fcGroupID">Radio Button</a>, <a href="303.htm#fcGroupID">Check Box</a>, <a href="304.htm#fcGroupID">Text Box</a>, <a href="306.htm#fcGroupID">Horizontal Slider</a>, <a href="307.htm#fcGroupID">Vertical Slider</a>, <a href="308.htm#fcGroupID">Rich Text Box</a>, <a href="309.htm#fcGroupID">Rich Button</a>, <a href="310.htm#fcGroupID">Rich List Box</a></small></p>
<p>
An ID used to group several form controls. Controls with the same fcGroupID belong to the same group.<br />
</p>
</div>
<div class="pdoc_obj_descr"><h4 id="fcUserString"><em><span class="field">fcUserString</span> (10017)</em> &nbsp; <small class="label">PD_ASC</small></h4>
<p class="also_appears_in"><small>Also appears in: <a href="301.htm#fcUserString">Button</a>, <a href="302.htm#fcUserString">Radio Button</a>, <a href="303.htm#fcUserString">Check Box</a>, <a href="304.htm#fcUserString">Text Box</a>, <a href="306.htm#fcUserString">Horizontal Slider</a>, <a href="307.htm#fcUserString">Vertical Slider</a>, <a href="308.htm#fcUserString">Rich Text Box</a>, <a href="309.htm#fcUserString">Rich Button</a>, <a href="310.htm#fcUserString">Rich List Box</a></small></p>
</div>
<div class="pdoc_obj_descr"><h4 id="fcOnCtrlRelease"><em><span class="field">fcOnCtrlRelease</span> (10200)</em> &nbsp; <small class="label">PD_ARR_BYTE_UNSIGNED</small></h4>
<p class="also_appears_in"><small>Also appears in: <a href="301.htm#fcOnCtrlRelease">Button</a>, <a href="302.htm#fcOnCtrlRelease">Radio Button</a>, <a href="303.htm#fcOnCtrlRelease">Check Box</a>, <a href="304.htm#fcOnCtrlRelease">Text Box</a>, <a href="306.htm#fcOnCtrlRelease">Horizontal Slider</a>, <a href="307.htm#fcOnCtrlRelease">Vertical Slider</a>, <a href="308.htm#fcOnCtrlRelease">Rich Text Box</a>, <a href="309.htm#fcOnCtrlRelease">Rich Button</a>, <a href="310.htm#fcOnCtrlRelease">Rich List Box</a></small></p>
<p>
An array of actions executed when the control is released.<br />
<br />
Each element of the array can have one of the following values:<br />
<br />
0 = Do nothing<br />
1 = Call the callback function<br />
2 = Jump to the page specified in fcUserParam<br />
3 = Scroll up (left) connected sliders, text boxes and list boxes<br />
4 = Scroll down (right) connected sliders, text boxes and list boxes<br />
5 = Scroll connected list boxes and text boxes according to the slider's position<br />
6 = Copy the value of the slider's position to connected text boxes<br />
7 = Scroll connected sliders according to the first visible item in the list box or text box<br />
8 = Copy the value of the selected item in the list to connected text boxes<br />
9 = Hide all controls whose GroupID matches the value specified in fcUserParam<br />
10 = Show all controls whose GroupID matches the value specified in fcUserParam<br />
11 = Alternate the visibility of all controls whose GroupID matches the value specified in fcUserParam<br />
12 = Jump to the previous page<br />
13 = Jump to the next page<br />
14 = Update connected sliders to reflect the amount of content in the text box<br />
15 = Copy the value of the slider's position to joined media - by time<br />
16 = Copy the value of the slider's position to joined media - by frame<br />
17 = Pause joined media<br />
18 = Play joined media<br />
19 = Restart joined media<br />
20 = Toggle joined media<br />
21 = Open URL specified in fcUserString using the default Web browser<br />
22 = Jump to the first page that holds an image with the name ID specified in fcUserParam<br />
23 = Jump to the last page that holds an image with the name ID specified in fcUserParam<br />
24 = Open address specified in fcUserString using the default E-mail client<br />
100 = Call the Program object via fcProgramPtr<br />
</p>
</div>
<div class="pdoc_obj_descr"><h4 id="fcOnCtrlChange"><em><span class="field">fcOnCtrlChange</span> (10201)</em> &nbsp; <small class="label">PD_ARR_BYTE_UNSIGNED</small></h4>
<p class="also_appears_in"><small>Also appears in: <a href="302.htm#fcOnCtrlChange">Radio Button</a>, <a href="303.htm#fcOnCtrlChange">Check Box</a>, <a href="304.htm#fcOnCtrlChange">Text Box</a>, <a href="306.htm#fcOnCtrlChange">Horizontal Slider</a>, <a href="307.htm#fcOnCtrlChange">Vertical Slider</a>, <a href="308.htm#fcOnCtrlChange">Rich Text Box</a>, <a href="310.htm#fcOnCtrlChange">Rich List Box</a></small></p>
<p>
An array of actions executed when a change inside the control is made.<br />
<br />
Each element of the array can have one of the following values:<br />
<br />
0 = Do nothing<br />
1 = Call the callback function<br />
2 = Jump to the page specified in fcUserParam<br />
3 = Scroll up (left) connected sliders, text boxes and list boxes<br />
4 = Scroll down (right) connected sliders, text boxes and list boxes<br />
5 = Scroll connected list boxes and text boxes according to the slider's position<br />
6 = Copy the value of the slider's position to connected text boxes<br />
7 = Scroll connected sliders according to the first visible item in the list box or text box<br />
8 = Copy the value of the selected item in the list to connected text boxes<br />
9 = Hide all controls whose GroupID matches the value specified in fcUserParam<br />
10 = Show all controls whose GroupID matches the value specified in fcUserParam<br />
11 = Alternate the visibility of all controls whose GroupID matches the value specified in fcUserParam<br />
12 = Jump to the previous page<br />
13 = Jump to the next page<br />
14 = Update connected sliders to reflect the amount of content in the text box<br />
15 = Copy the value of the slider's position to joined media - by time<br />
16 = Copy the value of the slider's position to joined media - by frame<br />
17 = Pause joined media<br />
18 = Play joined media<br />
19 = Restart joined media<br />
20 = Toggle joined media<br />
21 = Open URL specified in fcUserString using the default Web browser<br />
22 = Jump to the first page that holds an image with the name ID specified in fcUserParam<br />
23 = Jump to the last page that holds an image with the name ID specified in fcUserParam<br />
24 = Open address specified in fcUserString using the default E-mail client<br />
100 = Call the Program object via fcProgramPtr<br />
</p>
</div>
<div class="pdoc_obj_descr"><h4 id="fcOnCtrlScroll"><em><span class="field">fcOnCtrlScroll</span> (10202)</em> &nbsp; <small class="label">PD_ARR_BYTE_UNSIGNED</small></h4>
<p class="also_appears_in"><small>Also appears in: <a href="304.htm#fcOnCtrlScroll">Text Box</a>, <a href="308.htm#fcOnCtrlScroll">Rich Text Box</a>, <a href="310.htm#fcOnCtrlScroll">Rich List Box</a></small></p>
<p>
An array of actions executed when the control scrolls.<br />
<br />
Each element of the array can have one of the following values:<br />
<br />
0 = Do nothing<br />
1 = Call the callback function<br />
2 = Jump to the page specified in fcUserParam<br />
3 = Scroll up (left) connected sliders, text boxes and list boxes<br />
4 = Scroll down (right) connected sliders, text boxes and list boxes<br />
5 = Scroll connected list boxes and text boxes according to the slider's position<br />
6 = Copy the value of the slider's position to connected text boxes<br />
7 = Scroll connected sliders according to the first visible item in the list box or text box<br />
8 = Copy the value of the selected item in the list to connected text boxes<br />
9 = Hide all controls whose GroupID matches the value specified in fcUserParam<br />
10 = Show all controls whose GroupID matches the value specified in fcUserParam<br />
11 = Alternate the visibility of all controls whose GroupID matches the value specified in fcUserParam<br />
12 = Jump to the previous page<br />
13 = Jump to the next page<br />
14 = Update connected sliders to reflect the amount of content in the text box<br />
15 = Copy the value of the slider's position to joined media - by time<br />
16 = Copy the value of the slider's position to joined media - by frame<br />
17 = Pause joined media<br />
18 = Play joined media<br />
19 = Restart joined media<br />
20 = Toggle joined media<br />
21 = Open URL specified in fcUserString using the default Web browser<br />
22 = Jump to the first page that holds an image with the name ID specified in fcUserParam<br />
23 = Jump to the last page that holds an image with the name ID specified in fcUserParam<br />
24 = Open address specified in fcUserString using the default E-mail client<br />
100 = Call the Program object via fcProgramPtr<br />
</p>
</div>
<div class="pdoc_obj_descr"><h4 id="fcOnCtrlPush"><em><span class="field">fcOnCtrlPush</span> (10203)</em> &nbsp; <small class="label">PD_ARR_BYTE_UNSIGNED</small></h4>
<p class="also_appears_in"><small>Also appears in: <a href="301.htm#fcOnCtrlPush">Button</a>, <a href="302.htm#fcOnCtrlPush">Radio Button</a>, <a href="303.htm#fcOnCtrlPush">Check Box</a>, <a href="304.htm#fcOnCtrlPush">Text Box</a>, <a href="306.htm#fcOnCtrlPush">Horizontal Slider</a>, <a href="307.htm#fcOnCtrlPush">Vertical Slider</a>, <a href="308.htm#fcOnCtrlPush">Rich Text Box</a>, <a href="309.htm#fcOnCtrlPush">Rich Button</a>, <a href="310.htm#fcOnCtrlPush">Rich List Box</a></small></p>
<p>
An array of actions executed when the control is pushed.<br />
<br />
Each element of the array can have one of the following values:<br />
<br />
0 = Do nothing<br />
1 = Call the callback function<br />
2 = Jump to the page specified in fcUserParam<br />
3 = Scroll up (left) connected sliders, text boxes and list boxes<br />
4 = Scroll down (right) connected sliders, text boxes and list boxes<br />
5 = Scroll connected list boxes and text boxes according to the slider's position<br />
6 = Copy the value of the slider's position to connected text boxes<br />
7 = Scroll connected sliders according to the first visible item in the list box or text box<br />
8 = Copy the value of the selected item in the list to connected text boxes<br />
9 = Hide all controls whose GroupID matches the value specified in fcUserParam<br />
10 = Show all controls whose GroupID matches the value specified in fcUserParam<br />
11 = Alternate the visibility of all controls whose GroupID matches the value specified in fcUserParam<br />
12 = Jump to the previous page<br />
13 = Jump to the next page<br />
14 = Update connected sliders to reflect the amount of content in the text box<br />
15 = Copy the value of the slider's position to joined media - by time<br />
16 = Copy the value of the slider's position to joined media - by frame<br />
17 = Pause joined media<br />
18 = Play joined media<br />
19 = Restart joined media<br />
20 = Toggle joined media<br />
21 = Open URL specified in fcUserString using the default Web browser<br />
22 = Jump to the first page that holds an image with the name ID specified in fcUserParam<br />
23 = Jump to the last page that holds an image with the name ID specified in fcUserParam<br />
24 = Open address specified in fcUserString using the default E-mail client<br />
100 = Call the Program object via fcProgramPtr<br />
</p>
</div>
<div class="pdoc_obj_descr"><h4 id="fcOnCtrlFocusReceive"><em><span class="field">fcOnCtrlFocusReceive</span> (10204)</em> &nbsp; <small class="label">PD_ARR_BYTE_UNSIGNED</small></h4>
<p class="also_appears_in"><small>Also appears in: <a href="301.htm#fcOnCtrlFocusReceive">Button</a>, <a href="302.htm#fcOnCtrlFocusReceive">Radio Button</a>, <a href="303.htm#fcOnCtrlFocusReceive">Check Box</a>, <a href="304.htm#fcOnCtrlFocusReceive">Text Box</a>, <a href="306.htm#fcOnCtrlFocusReceive">Horizontal Slider</a>, <a href="307.htm#fcOnCtrlFocusReceive">Vertical Slider</a>, <a href="308.htm#fcOnCtrlFocusReceive">Rich Text Box</a>, <a href="309.htm#fcOnCtrlFocusReceive">Rich Button</a>, <a href="310.htm#fcOnCtrlFocusReceive">Rich List Box</a></small></p>
<p>
An array of actions executed when the control receives focus.<br />
<br />
Each element of the array can have one of the following values:<br />
<br />
0 = Do nothing<br />
1 = Call the callback function<br />
2 = Jump to the page specified in fcUserParam<br />
3 = Scroll up (left) connected sliders, text boxes and list boxes<br />
4 = Scroll down (right) connected sliders, text boxes and list boxes<br />
5 = Scroll connected list boxes and text boxes according to the slider's position<br />
6 = Copy the value of the slider's position to connected text boxes<br />
7 = Scroll connected sliders according to the first visible item in the list box or text box<br />
8 = Copy the value of the selected item in the list to connected text boxes<br />
9 = Hide all controls whose GroupID matches the value specified in fcUserParam<br />
10 = Show all controls whose GroupID matches the value specified in fcUserParam<br />
11 = Alternate the visibility of all controls whose GroupID matches the value specified in fcUserParam<br />
12 = Jump to the previous page<br />
13 = Jump to the next page<br />
14 = Update connected sliders to reflect the amount of content in the text box<br />
15 = Copy the value of the slider's position to joined media - by time<br />
16 = Copy the value of the slider's position to joined media - by frame<br />
17 = Pause joined media<br />
18 = Play joined media<br />
19 = Restart joined media<br />
20 = Toggle joined media<br />
21 = Open URL specified in fcUserString using the default Web browser<br />
22 = Jump to the first page that holds an image with the name ID specified in fcUserParam<br />
23 = Jump to the last page that holds an image with the name ID specified in fcUserParam<br />
24 = Open address specified in fcUserString using the default E-mail client<br />
100 = Call the Program object via fcProgramPtr<br />
</p>
</div>
<div class="pdoc_obj_descr"><h4 id="fcOnCtrlHold"><em><span class="field">fcOnCtrlHold</span> (10205)</em> &nbsp; <small class="label">PD_ARR_BYTE_UNSIGNED</small></h4>
<p class="also_appears_in"><small>Also appears in: <a href="301.htm#fcOnCtrlHold">Button</a>, <a href="302.htm#fcOnCtrlHold">Radio Button</a>, <a href="303.htm#fcOnCtrlHold">Check Box</a>, <a href="304.htm#fcOnCtrlHold">Text Box</a>, <a href="306.htm#fcOnCtrlHold">Horizontal Slider</a>, <a href="307.htm#fcOnCtrlHold">Vertical Slider</a>, <a href="308.htm#fcOnCtrlHold">Rich Text Box</a>, <a href="309.htm#fcOnCtrlHold">Rich Button</a>, <a href="310.htm#fcOnCtrlHold">Rich List Box</a></small></p>
<p>
An array of actions executed when the control is held.<br />
<br />
Each element of the array can have one of the following values:<br />
<br />
0 = Do nothing<br />
1 = Call the callback function<br />
2 = Jump to the page specified in fcUserParam<br />
3 = Scroll up (left) connected sliders, text boxes and list boxes<br />
4 = Scroll down (right) connected sliders, text boxes and list boxes<br />
5 = Scroll connected list boxes and text boxes according to the slider's position<br />
6 = Copy the value of the slider's position to connected text boxes<br />
7 = Scroll connected sliders according to the first visible item in the list box or text box<br />
8 = Copy the value of the selected item in the list to connected text boxes<br />
9 = Hide all controls whose GroupID matches the value specified in fcUserParam<br />
10 = Show all controls whose GroupID matches the value specified in fcUserParam<br />
11 = Alternate the visibility of all controls whose GroupID matches the value specified in fcUserParam<br />
12 = Jump to the previous page<br />
13 = Jump to the next page<br />
14 = Update connected sliders to reflect the amount of content in the text box<br />
15 = Copy the value of the slider's position to joined media - by time<br />
16 = Copy the value of the slider's position to joined media - by frame<br />
17 = Pause joined media<br />
18 = Play joined media<br />
19 = Restart joined media<br />
20 = Toggle joined media<br />
21 = Open URL specified in fcUserString using the default Web browser<br />
22 = Jump to the first page that holds an image with the name ID specified in fcUserParam<br />
23 = Jump to the last page that holds an image with the name ID specified in fcUserParam<br />
24 = Open address specified in fcUserString using the default E-mail client<br />
100 = Call the Program object via fcProgramPtr<br />
</p>
</div>
<div class="pdoc_obj_descr"><h4 id="fcOnCtrlFocusLose"><em><span class="field">fcOnCtrlFocusLose</span> (10206)</em> &nbsp; <small class="label">PD_ARR_BYTE_UNSIGNED</small></h4>
<p class="also_appears_in"><small>Also appears in: <a href="301.htm#fcOnCtrlFocusLose">Button</a>, <a href="302.htm#fcOnCtrlFocusLose">Radio Button</a>, <a href="303.htm#fcOnCtrlFocusLose">Check Box</a>, <a href="304.htm#fcOnCtrlFocusLose">Text Box</a>, <a href="306.htm#fcOnCtrlFocusLose">Horizontal Slider</a>, <a href="307.htm#fcOnCtrlFocusLose">Vertical Slider</a>, <a href="308.htm#fcOnCtrlFocusLose">Rich Text Box</a>, <a href="309.htm#fcOnCtrlFocusLose">Rich Button</a>, <a href="310.htm#fcOnCtrlFocusLose">Rich List Box</a></small></p>
<p>
An array of actions executed when the control loses focus.<br />
<br />
Each element of the array can have one of the following values:<br />
<br />
0 = Do nothing<br />
1 = Call the callback function<br />
2 = Jump to the page specified in fcUserParam<br />
3 = Scroll up (left) connected sliders, text boxes and list boxes<br />
4 = Scroll down (right) connected sliders, text boxes and list boxes<br />
5 = Scroll connected list boxes and text boxes according to the slider's position<br />
6 = Copy the value of the slider's position to connected text boxes<br />
7 = Scroll connected sliders according to the first visible item in the list box or text box<br />
8 = Copy the value of the selected item in the list to connected text boxes<br />
9 = Hide all controls whose GroupID matches the value specified in fcUserParam<br />
10 = Show all controls whose GroupID matches the value specified in fcUserParam<br />
11 = Alternate the visibility of all controls whose GroupID matches the value specified in fcUserParam<br />
12 = Jump to the previous page<br />
13 = Jump to the next page<br />
14 = Update connected sliders to reflect the amount of content in the text box<br />
15 = Copy the value of the slider's position to joined media - by time<br />
16 = Copy the value of the slider's position to joined media - by frame<br />
17 = Pause joined media<br />
18 = Play joined media<br />
19 = Restart joined media<br />
20 = Toggle joined media<br />
21 = Open URL specified in fcUserString using the default Web browser<br />
22 = Jump to the first page that holds an image with the name ID specified in fcUserParam<br />
23 = Jump to the last page that holds an image with the name ID specified in fcUserParam<br />
24 = Open address specified in fcUserString using the default E-mail client<br />
100 = Call the Program object via fcProgramPtr<br />
</p>
</div>
<div class="pdoc_obj_descr"><h4 id="fcItemFirst"><em><span class="field">fcItemFirst</span> (10100)</em> &nbsp; <small class="label">PD_LONG_SIGNED</small></h4>
<p class="also_appears_in"><small>Also appears in: <a href="304.htm#fcItemFirst">Text Box</a>, <a href="308.htm#fcItemFirst">Rich Text Box</a>, <a href="310.htm#fcItemFirst">Rich List Box</a></small></p>
<p>
For List Boxes, this is the index of the first visible row in the list. For Text Boxes, this is the index of the first visible character.<br />
</p>
</div>
<div class="pdoc_obj_descr"><h4 id="fcListSelectedItems"><em><span class="field">fcListSelectedItems</span> (10101)</em> &nbsp; <small class="label">PD_ARR_LONG_SIGNED</small></h4>
<p class="also_appears_in"><small>Also appears in: <a href="310.htm#fcListSelectedItems">Rich List Box</a></small></p>
<p>
An array containing indexes of the selected items in the list.<br />
</p>
</div>
<div class="pdoc_obj_descr"><h4 id="fcListMultiSelect"><em><span class="field">fcListMultiSelect</span> (10102)</em> &nbsp; <small class="label">PD_BYTE_UNSIGNED</small></h4>
<p class="also_appears_in"><small>Also appears in: <a href="310.htm#fcListMultiSelect">Rich List Box</a></small></p>
<p>
A flag indicating whether multiple list items can be selected.<br />
<br />
<strong>Supported values:</strong><br />
<br />
0 = Only single item can be selected<br />
1 = Multiple items can be selected<br />
</p>
</div>
<div class="pdoc_obj_descr"><h4 id="fcAlign"><em><span class="field">fcAlign</span> (10104)</em> &nbsp; <small class="label">PD_BYTE_UNSIGNED</small></h4>
<p class="also_appears_in"><small>Also appears in: <a href="202.htm#fcAlign">Listbox Column</a>, <a href="304.htm#fcAlign">Text Box</a></small></p>
<p>
Alignment of a text line within a text box or list box column.<br />
<br />
<strong>Supported values:</strong><br />
<br />
0 = Left: The text line is aligned left.<br />
<br />
1 = Center: The text line is centered.<br />
<br />
2 = Right: The text line is aligned right.<br />
<br />
3 = Justified Type A-L: Justify the text line by inserting extra spacing after each character. If this is not possible (e.g. the text line contains a single character), then left justify.<br />
<br />
4 = Justified Type B-L: Justify the text line by inserting extra spacing only after the space characters. If this is not possible (e.g. the text line does not have any space characters), then left justify.<br />
<br />
5 = Justified Type A-C: Justify the text line by inserting extra spacing after each character. If this is not possible (e.g. the text line contains a single character), then center.<br />
<br />
6 = Justified Type B-C: Justify the text line by inserting extra spacing only after the space characters. If this is not possible (e.g. the text line does not have any space characters), then center.<br />
<br />
7 = Justified Type A-R: Justify the text line by inserting extra spacing after each character. If this is not possible (e.g. the text line contains a single character), then right justify.<br />
<br />
8 = Justified Type B-R: Justify the text line by inserting extra spacing only after the space characters. If this is not possible (e.g. the text line does not have any space characters), then right justify.<br />
</p>
</div>
<h3 id="example">Example</h3>
<p><strong>C/C++</strong></p>
<div class="box_field"><tt>DT_ID_SLONG obj[3];<br />
<br />
obj[0] = pdObjAdd(pd, 0, "Form Configuration");<br />
<strong>obj[1] = pdObjAdd(pd, 0, "Form List Box");</strong><br />
obj[2] = pdObjAdd(pd, 0, "Form List Box - Second Column");<br />
<br />
<span class="codecomment">/* Properties for object 0 */</span><br />
pdPropAdd(pd, obj[0], fcCnfLib, "0", PD_WORD_SIGNED);<br />
pdPropAdd(pd, obj[0], fcCnfCtrlStyleOnFocus, "0", PD_WORD_SIGNED);<br />
pdPropAdd(pd, obj[0], fcCnfCharBox, "6", PD_BYTE_UNSIGNED);<br />
pdPropAdd(pd, obj[0], fcCnfButtonNormal, "14", PD_BYTE_UNSIGNED);<br />
pdPropAdd(pd, obj[0], fcCnfButtonPushed, "13", PD_BYTE_UNSIGNED);<br />
pdPropAdd(pd, obj[0], fcCnfSliderNormal, "2", PD_BYTE_UNSIGNED);<br />
pdPropAdd(pd, obj[0], fcCnfSliderPushed, "3", PD_BYTE_UNSIGNED);<br />
pdPropAdd(pd, obj[0], fcCnfRadioButtonNormal, "6", PD_BYTE_UNSIGNED);<br />
pdPropAdd(pd, obj[0], fcCnfRadioButtonPushed, "7", PD_BYTE_UNSIGNED);<br />
pdPropAdd(pd, obj[0], fcCnfRadioButtonSelected, "8", PD_BYTE_UNSIGNED);<br />
pdPropAdd(pd, obj[0], fcCnfCheckBoxNormal, "3", PD_BYTE_UNSIGNED);<br />
pdPropAdd(pd, obj[0], fcCnfCheckBoxPushed, "4", PD_BYTE_UNSIGNED);<br />
pdPropAdd(pd, obj[0], fcCnfCheckBoxSelected, "5", PD_BYTE_UNSIGNED);<br />
<br />
<span class="codecomment">/* Properties for object 1 */</span><br />
<strong>pdLinkAdd(pd, obj[1], fcConfigPtr, obj[0]);<br />
pdLinkAdd(pd, obj[1], fcColumnNextPtr, obj[2]);<br />
pdPropAdd(pd, obj[1], fcValue_08, "Item 0\015Item 1\015Item 2\015Item 3\015Item 4\015Item 5", PD_ASC);<br />
pdPropAdd(pd, obj[1], fcName, "IDLISTBOX", PD_ASC);<br />
pdPropAdd(pd, obj[1], fcDw, "800", PD_LONG_SIGNED);<br />
pdPropAdd(pd, obj[1], fcDh, "500", PD_LONG_SIGNED);<br />
pdPropAdd(pd, obj[1], fcListMultiSelect, "1", PD_BYTE_UNSIGNED);<br />
pdPropAdd(pd, obj[1], fcItemFirst, "0", PD_LONG_SIGNED);<br />
pdPropAdd(pd, obj[1], fcListSelectedItems, "0, 2", PD_ARR_LONG_SIGNED);<br />
pdPropAdd(pd, obj[1], fcTabOrderID, "100", PD_WORD_SIGNED);<br />
pdPropAdd(pd, obj[1], fcOnCtrlChange, "1", PD_BYTE_UNSIGNED);<br />
pdPropAdd(pd, obj[1], fcOnCtrlScroll, "1", PD_BYTE_UNSIGNED);</strong><br />
<br />
<span class="codecomment">/* Properties for object 2 */</span><br />
pdPropAdd(pd, obj[2], fcValue_08, "$100.00\015$5,500.00\015$9,850.00\015$800.00\015$200.00\015$8,550.00", PD_ASC);<br />
pdPropAdd(pd, obj[2], fcAlign, "2", PD_BYTE_UNSIGNED);<br />
pdPropAdd(pd, obj[2], fcListColOffset, "400", PD_LONG_SIGNED);<br />
<br />
<span class="codecomment">/* Image placement */</span><br />
<strong>pdImgAdd(pd, obj[1], 0, 50, 50, 0, 0, 0, fcDrawListBox, DV_NULL);</strong><br />
</tt></div>
<p><strong>INTEGRAL DSL</strong></p>
<div class="box_field"><tt><span class="codecomment">/* Lambda shortcuts */</span><br />
<br />
local o = @(label = "") CDTObj(::my.doc, label); <span class="codecomment">/* to make object */</span><br />
local p = @(id, str, len = PD_DEFAULT) CDTProp(id, str, len); <span class="codecomment">/* to add property - general */</span><br />
local s = @(id, str) CDTPropStr(id, str); <span class="codecomment">/* to add property - string */</span><br />
local i = @(id, num) CDTPropInt(id, num); <span class="codecomment">/* to add property - integer */</span><br />
local l = @(id, obj) CDTLink(id, obj); <span class="codecomment">/* to add link */</span><br />
<br />
<span class="codecomment">/* Objects */</span><br />
<br />
local obj_0 = o("Form Configuration");<br />
local obj_1 = o("Form List Box");<br />
local obj_2 = o("Form List Box - Second Column");<br />
<br />
<span class="codecomment">/* Object Properties */</span><br />
<br />
obj_0 + i(fcCnfLib, 0);<br />
obj_0 + i(fcCnfCtrlStyleOnFocus, 0);<br />
obj_0 + i(fcCnfCharBox, 6);<br />
obj_0 + i(fcCnfButtonNormal, 14);<br />
obj_0 + i(fcCnfButtonPushed, 13);<br />
obj_0 + i(fcCnfSliderNormal, 2);<br />
obj_0 + i(fcCnfSliderPushed, 3);<br />
obj_0 + i(fcCnfRadioButtonNormal, 6);<br />
obj_0 + i(fcCnfRadioButtonPushed, 7);<br />
obj_0 + i(fcCnfRadioButtonSelected, 8);<br />
obj_0 + i(fcCnfCheckBoxNormal, 3);<br />
obj_0 + i(fcCnfCheckBoxPushed, 4);<br />
obj_0 + i(fcCnfCheckBoxSelected, 5);<br />
<br />
obj_1 + l(fcConfigPtr, obj_0);<br />
obj_1 + l(fcColumnNextPtr, obj_2);<br />
obj_1 + p(fcValue_08, "Item 0\rItem 1\rItem 2\rItem 3\rItem 4\rItem 5", PD_ASC);<br />
obj_1 + p(fcName, "IDLISTBOX", PD_ASC);<br />
obj_1 + i(fcDw, 800);<br />
obj_1 + i(fcDh, 500);<br />
obj_1 + i(fcListMultiSelect, 1);<br />
obj_1 + i(fcItemFirst, 0);<br />
obj_1 + p(fcListSelectedItems, "0, 2", PD_ARR_LONG_SIGNED);<br />
obj_1 + i(fcTabOrderID, 100);<br />
obj_1 + i(fcOnCtrlChange, 1);<br />
obj_1 + i(fcOnCtrlScroll, 1);<br />
<br />
obj_2 + p(fcValue_08, "$100.00\r$5,500.00\r$9,850.00\r$800.00\r$200.00\r$8,550.00", PD_ASC);<br />
obj_2 + i(fcAlign, 2);<br />
obj_2 + i(fcListColOffset, 400);<br />
<br />
<span class="codecomment">/* Image Pinning */</span><br />
<br />
obj_1.Pin(0, 50, 50, fcDrawListBox);<br />
</tt></div>



&nbsp;
<br />
<br />
<a href="../../common/manual/index.htm"><img src="../../common/images/index.gif" border="0" alt="Index" /></a><br />&nbsp;
</body>
</html>
